name: CI/CD

on:
  - push
  - pull_request

# env:
#   MANIFEST_FILE_NAME: ${{ inputs.manifest_file_name }}
#   PUBLIC_PATH: ${{ inputs.public_path }}
#   PACKAGE_FILE_NAME: ${{ inputs.package_file_name }}
#   PACKAGE_PATH: ${{ inputs.package_path }}
#   DOWNLOAD_BASE: "https://github.com/${{github.repository}}/releases/download"

jobs:
  # parse_tag:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     tag_version: ${{ steps.get_tag_version.outputs.group1 }}
  #     tag_prerelease: ${{ steps.get_tag_version.outputs.group2 }}
  #   steps:
  #     - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

  #     - name: Get tag versions
  #       if: github.ref_type == 'tag'
  #       id: get_tag_version
  #       uses: actions-ecosystem/action-regex-match@v2
  #       with:
  #         regex: '^refs/tags\/(v\d+\.\d+\.\d+(?:$|(-[a-z0-9._-]+)))'
  #         text: ${{ github.ref }}

  # instrument_parse_tag:
  #   runs-on: ubuntu-latest
  #   needs: parse_tag
  #   steps:
  #     - name: Instrument tags capture
  #       run: |
  #         echo "tag_version: ${{ needs.parse_tag.outputs.tag_version }}"
  #         echo "tag_prerelease: ${{ needs.parse_tag.outputs.tag_prerelease }}"

  build:
    name: Build
    runs-on: ubuntu-latest
    # needs: parse_tag
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Activate pnpm
        run: |
          corepack enable

        # corepack prepare pnpm@${{ inputs.pnpm_version }} --activate

      - name: Instrumentation
        run: |
          pwd
          ls -l
          cat tsconfig.json
          export
          node --version
          pnpm --version

      - name: Install dependencies
        run: pnpm install

      - name: Instrument tsc version
        run: npx tsc --version

      # - name: Update manifest
      #   if: needs.parse_tag.outputs.tag_version != ''
      #   env:
      #     CI_COMMIT_TAG: ${{ needs.parse_tag.outputs.tag_version }}
      #     CI_PROJECT_PATH: ${{ github.repository }}
      #   run: |
      #     echo "CI_COMMIT_TAG: $CI_COMMIT_TAG"
      #     echo "CI_PROJECT_PATH: $CI_PROJECT_PATH"
      #     ./tasks.ts updateManifestFromCITagPush
      #     cat $MANIFEST_PATH

      - name: Typecheck
        run: pnpm run typecheck

      # - name: Test
      #   run: pnpm test

      - name: Lint
        run: pnpm run lint:check

      - name: Check formatting
        run: pnpm run format:check

      # - name: Build Package
      #   run: pnpm package

      # - name: Upload package file
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: package-zip
      #     if-no-files-found: error
      #     path: ${{env.PACKAGE_PATH}}/${{env.PACKAGE_FILE_NAME}}

      # - name: Upload manifest
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: manifest
      #     if-no-files-found: error
      #     path: ${{env.PUBLIC_PATH}}/${{env.MANIFEST_FILE_NAME}}

  # publish-release:
  #   needs:
  #     - build
  #     - parse_tag
  #   runs-on: ubuntu-latest
  #   environment: release
  #   permissions:
  #     contents: write
  #   if: needs.parse_tag.outputs.tag_version != '' && needs.parse_tag.outputs.tag_prerelease == ''
  #   steps:
  #     - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

  #     - name: publish
  #       uses: lumphammer/gh-actions/.github/actions/publish@2024-09-18
  #       with:
  #         version: ${{needs.parse_tag.outputs.tag_version}}
  #         prerelease: ${{needs.parse_tag.outputs.tag_prerelease}}
  #         manifest_file_name: ${{env.MANIFEST_FILE_NAME}}
  #         package_file_name: ${{env.PACKAGE_FILE_NAME}}
  #         download_base: ${{env.DOWNLOAD_BASE}}
  #         github_token: ${{ secrets.GITHUB_TOKEN }}

  # publish-prerelease:
  #   needs:
  #     - build
  #     - parse_tag
  #   runs-on: ubuntu-latest
  #   environment: prerelease
  #   permissions:
  #     contents: write
  #   if: needs.parse_tag.outputs.tag_version != '' && needs.parse_tag.outputs.tag_prerelease != ''
  #   steps:
  #     - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

  #     - name: publish
  #       uses: lumphammer/gh-actions/.github/actions/publish@2024-09-18
  #       with:
  #         version: ${{needs.parse_tag.outputs.tag_version}}
  #         prerelease: ${{needs.parse_tag.outputs.tag_prerelease}}
  #         manifest_file_name: ${{env.MANIFEST_FILE_NAME}}
  #         package_file_name: ${{env.PACKAGE_FILE_NAME}}
  #         download_base: ${{env.DOWNLOAD_BASE}}
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
